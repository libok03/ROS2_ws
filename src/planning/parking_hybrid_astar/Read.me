사용법 

1. 위 프로그램은 ros2 기반으로 작동함.
2. 위 파일을 돌리기 전에 all_in_one파일 언저 launch 해야합니다!

기본 동작 및 변수 설명

기본 적으로 받은 velodyne point들을  plane_fit_ground_filter을 이용해 땅을 제거하고,
adaptive clustering 을 이용해 장애물을 posearrow 값으로 받은 뒤에 
이 장애물을 피해서 hybrid a star 알고리즘으로 경로를 생성합니다.

경로 생성 조건 
-> 일정 박스 안에 장애물이 없는지 확인 후 없다면 현재 위치의 앞부분에서 뒤로 가는 경로를 생성 합니다.

PathplannerNode 내부 함수 설명
subsscription
/cone_pose_map
//localization/kinetic_state

publisher
/planned_path

odom_callback
현재 위치를 반환한다
만약 위치가 지정된 위치에 다다르면
flag를 True값으로 바꿔준다

cone_pose_callback
/cone_pose_map으로 받은 posearray값을 비교해서 
만약 새로운 값이라면 장애물의 위치에 포함한다.

euler_from_quaternion, quaternion_from_yaw
걍 계산 함수다.

plan_path
아직 경로를 계산하지 않았고, 시작점에 있을떄 계산한다.
차의 위치로부터 일정부분 떨어진 공간에 장애물이 없으면,
앞으로 일정 갔다가 뒤로 후진하는 식의 경로를 생성한다.
hybrid_a_star알고리즘을 이용하게 된다.
만약 아직 장애물이 없는 곳을 발견하지 못하면, 계속 앞으로 가며 탐색하는 과정을 거친다.
